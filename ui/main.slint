import { HorizontalBox, StyleMetrics, LineEdit, Button } from "std-widgets.slint";

export global LinkHandler {
    callback link-clicked(string);
}

component Hyperlink inherits Text {
    in property <string> url;

    area := TouchArea {
        clicked => {
            LinkHandler.link-clicked(root.url)
        }
    }
}

export component SteamOptionX inherits Window {
    in-out property <string> file-path: init-file();
    pure callback init-file() -> string;
    callback reload-file(string, string) -> string;
    callback file-dialog(string) -> string;

    title: @tr("SteamOptionX");

    HorizontalBox {
        VerticalLayout {
            spacing: StyleMetrics.layout-spacing;

            VerticalLayout {
                Text {
                    text: @tr("Open 'Steam/userdata/XXXXXXXX/config/localconfig.vdf':");
                }

                GridLayout {
                    HorizontalLayout {
                        spacing: StyleMetrics.layout-spacing;

                        LineEdit {
                            text: root.file-path;

                            accepted(path) => {
                                root.file-path = reload-file(path, root.file-path);
                            }
                        }

                        Button {
                            text: "Open file...";

                            clicked => {
                                root.file-path = file-dialog(root.file-path)
                            }
                        }
                    }
                }

                Text {
                    text: root.file-path;
                }
            }

            VerticalLayout {
                Text {
                    text: @tr("Filter by game:");
                }

                filter-edit := LineEdit {
                    placeholder-text: @tr("Enter game...");
                }

                Hyperlink {
                    text: @tr("Game");
                    url: @tr("https://example.com");
                }
            }
        }
    }
}
